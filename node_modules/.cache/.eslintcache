[{"D:\\tp\\react-basics\\src\\index.js":"1","D:\\tp\\react-basics\\src\\App.js":"2","D:\\tp\\react-basics\\src\\routes\\Hooks.jsx":"3","D:\\tp\\react-basics\\src\\todo\\Todo.jsx":"4","D:\\tp\\react-basics\\src\\routes\\Home.jsx":"5","D:\\tp\\react-basics\\src\\routes\\Main.js":"6","D:\\tp\\react-basics\\src\\routes\\Child.jsx":"7","D:\\tp\\react-basics\\src\\menu-cart\\Menu.jsx":"8","D:\\tp\\react-basics\\src\\menu-cart\\MenuApi.jsx":"9","D:\\tp\\react-basics\\src\\form\\Form.jsx":"10","D:\\tp\\react-basics\\src\\routes\\HooksOld.jsx":"11"},{"size":198,"mtime":1648192887712,"results":"12","hashOfConfig":"13"},{"size":184,"mtime":1648193404023,"results":"14","hashOfConfig":"13"},{"size":1192,"mtime":1648193460040,"results":"15","hashOfConfig":"13"},{"size":2700,"mtime":1648193107159,"results":"16","hashOfConfig":"13"},{"size":778,"mtime":1648198002813,"results":"17","hashOfConfig":"13"},{"size":515,"mtime":1648198035923,"results":"18","hashOfConfig":"13"},{"size":390,"mtime":1648193435693,"results":"19","hashOfConfig":"13"},{"size":1517,"mtime":1648193531539,"results":"20","hashOfConfig":"13"},{"size":713,"mtime":1648193515022,"results":"21","hashOfConfig":"13"},{"size":4864,"mtime":1648193768589,"results":"22","hashOfConfig":"13"},{"size":1228,"mtime":1648198159486,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qwwtwq",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\tp\\react-basics\\src\\index.js",[],[],"D:\\tp\\react-basics\\src\\App.js",[],[],"D:\\tp\\react-basics\\src\\routes\\Hooks.jsx",["60"],[],"import React, { useState, useEffect, useReducer, createContext } from 'react';\r\nimport Child from './Child';\r\n\r\nexport const GlobalInfo = createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  if (action.type === 'add') {\r\n    return state + 1;\r\n  } else if (action.type === 'sub') {\r\n    return state - 1;\r\n  }\r\n  return state;\r\n}\r\n\r\nconst Hooks = () => {\r\n  const [count, setCount] = useState(0);\r\n  const [data, setData] = useState('Kirtishil');\r\n\r\n  useEffect(() => {\r\n    console.log(`count is : ${count}`);\r\n  });\r\n\r\n  const [state, dispatch] = useReducer(reducer, 0);\r\n\r\n  function parentAlert(data) {\r\n    alert(data);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {count}\r\n        <button onClick={() => setCount(count + 1)}>add</button>\r\n        <button onClick={() => setCount(count - 1)}>sub</button>\r\n      </div>\r\n      <div>\r\n        {state}\r\n        <button onClick={() => dispatch({ type: 'add' })}> add</button>\r\n        <button onClick={() => dispatch({ type: 'sub' })}> sub</button>\r\n      </div>\r\n      <GlobalInfo.Provider value={{ parentData: data }}>\r\n        <Child alert={parentAlert} />\r\n      </GlobalInfo.Provider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Hooks","D:\\tp\\react-basics\\src\\todo\\Todo.jsx",[],[],"D:\\tp\\react-basics\\src\\routes\\Home.jsx",[],[],"D:\\tp\\react-basics\\src\\routes\\Main.js",[],[],"D:\\tp\\react-basics\\src\\routes\\Child.jsx",[],[],"D:\\tp\\react-basics\\src\\menu-cart\\Menu.jsx",["61","62","63"],[],"import React, { useState, useEffect } from 'react'\r\nimport MenuApi from './MenuApi'\r\n\r\nconst uniqueList = [\r\n  ...new Set(MenuApi.map((elem) => {\r\n    return elem.category\r\n  })\r\n  ), \"All\"\r\n]\r\n\r\nconst Menu = () => {\r\n\r\n  const [menuData, setMenuData] = useState(MenuApi);\r\n\r\n  const [menuList, setMenuList] = useState(uniqueList);\r\n\r\n  const filterItem = (category) => {\r\n    if (category === 'All') {\r\n      setMenuData(MenuApi);\r\n      return;\r\n    }\r\n    const updateList = MenuApi.filter((elem) => {\r\n      return elem.category === category;\r\n    });\r\n    setMenuData(updateList);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navbar\">\r\n        <div>\r\n          {\r\n            menuList.map((elem, i) => {\r\n              return (\r\n                <button key={i} type=\"button\" className=\"btn btn-primary m-1\" onClick={() => filterItem(elem)}>{elem}</button>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </nav>\r\n      <div className=\"container d-flex\">\r\n        {\r\n          menuData.map((menu) => {\r\n            const { id, name, category, price, description } = menu;\r\n            return (\r\n              <div className=\"card  m-2\" style={{ width: '18rem' }} key={id}>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{name} - {price}</h5>\r\n                  <p className=\"card-text\">{description}</p>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Menu;","D:\\tp\\react-basics\\src\\menu-cart\\MenuApi.jsx",[],[],"D:\\tp\\react-basics\\src\\form\\Form.jsx",["64"],[],"import React, { useState, useEffect } from 'react'\r\n\r\nconst Form = () => {\r\n\r\n  const [data, setData] = useState({\r\n    fname: \"\",\r\n    lname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    gender: \"\",\r\n    roles: {\r\n      frontend: false,\r\n      backend: false\r\n    },\r\n    lang: \"react js\"\r\n  });\r\n\r\n  const [storedData, setStoredData] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    if (localStorage.getItem('users')) {\r\n      let storedata = JSON.parse(localStorage.getItem('users'));\r\n      setStoredData(storedata);\r\n      console.log(storedata);\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    let updateName = e.target.name;\r\n    let updateValue = e.target.value;\r\n    if (updateName === 'frontend') {\r\n      let role = data.roles.frontend = e.target.checked;\r\n      setData({ ...data, role })\r\n      return;\r\n    } else if (updateName === 'backend') {\r\n      let role = data.roles.backend = e.target.checked;\r\n      setData({ ...data, role })\r\n      return;\r\n    }\r\n\r\n    setData({ ...data, [updateName]: updateValue });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(data)\r\n\r\n    setStoredData(data)\r\n    localStorage.setItem('users', JSON.stringify([data]));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1>Registration Form</h1>\r\n        <hr />\r\n        <div>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"fname\">First Name</label>\r\n              <input type=\"text\" className=\"form-control\" name=\"fname\" value={data.fname} onChange={(e) => handleChange(e)} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"lname\">Last Name</label>\r\n              <input type=\"text\" className=\"form-control\" name=\"lname\" value={data.lname} onChange={(e) => handleChange(e)} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" className=\"form-control\" name=\"email\" aria-describedby=\"email\" value={data.email} onChange={(e) => handleChange(e)} />\r\n              <small name=\"email\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input type=\"password\" className=\"form-control\" name=\"password\" value={data.password} onChange={(e) => handleChange(e)} />\r\n            </div>\r\n            <div className=\"d-flex\" style={{ gap: \"2rem\" }}>\r\n              Gender:\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"male\" value='male' onChange={(e) => handleChange(e)} />\r\n                <label className=\"form-check-label\" htmlFor=\"male\">\r\n                  Male\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"female\" value='female' onChange={(e) => handleChange(e)} />\r\n                <label className=\"form-check-label\" htmlFor=\"female\">\r\n                  Female\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex\" style={{ gap: \"2rem\" }}>\r\n              Role:\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" name=\"frontend\" onChange={(e) => handleChange(e)} id=\"frontend\" />\r\n                <label className=\"form-check-label\" htmlFor=\"frontend\">\r\n                  Frontend\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" name=\"backend\" onChange={(e) => handleChange(e)} id=\"backend\" />\r\n                <label className=\"form-check-label\" htmlFor=\"backend\">\r\n                  Backend\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"lang\">Language</label>\r\n              <select className=\"form-control\" name=\"lang\" value={data.lang} onChange={(e) => handleChange(e)}>\r\n                <option value=\"react js\">React js</option>\r\n                <option value=\"vue js\">Vue js</option>\r\n                <option value=\"node js\">Node js</option>\r\n                <option value=\"express js\">Express js</option>\r\n                <option value=\"vanilla js\">Vanilla js</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <button className=\"btn btn-success mb-3 mb-2\" type='submit' onClick={(e) => handleSubmit(e)}>\r\n                Submit\r\n              </button>\r\n            </div>\r\n\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Form","D:\\tp\\react-basics\\src\\routes\\HooksOld.jsx",[],[],{"ruleId":"65","severity":1,"message":"66","line":17,"column":16,"nodeType":"67","messageId":"68","endLine":17,"endColumn":23},{"ruleId":"65","severity":1,"message":"69","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"65","severity":1,"message":"70","line":15,"column":20,"nodeType":"67","messageId":"68","endLine":15,"endColumn":31},{"ruleId":"65","severity":1,"message":"71","line":44,"column":31,"nodeType":"67","messageId":"68","endLine":44,"endColumn":39},{"ruleId":"65","severity":1,"message":"72","line":18,"column":10,"nodeType":"67","messageId":"68","endLine":18,"endColumn":20},"no-unused-vars","'setData' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setMenuList' is assigned a value but never used.","'category' is assigned a value but never used.","'storedData' is assigned a value but never used."]