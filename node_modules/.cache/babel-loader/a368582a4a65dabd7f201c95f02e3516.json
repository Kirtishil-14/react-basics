{"ast":null,"code":"var _jsxFileName = \"D:\\\\tp\\\\react-basics\\\\src\\\\routes\\\\HooksOld.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, createContext, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\n\nconst reducer = (state, action) => {\n  if (action.type === 'Add') {\n    state = state + 1;\n  } else if (state > 0 && action.type === 'Sub') {\n    state = state - 1;\n  }\n\n  return state;\n};\n\nconst Hooks = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [state, dispatch] = useReducer(reducer, 10);\n  useEffect(() => {\n    console.log(`you clicked ${count} times`);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary m-1\",\n      onClick: () => dispatch({\n        type: \"Add\"\n      }),\n      children: \"Reducer Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary m-1\",\n      onClick: () => dispatch({\n        type: \"Sub\"\n      }),\n      children: \"Reducer Sub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: count,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: () => setCount(count + 1),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChildComponent, {\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Hooks, \"tlhG+LjP4klDJrdiSgf6Jt8hBAE=\");\n\n_c = Hooks;\n\nconst ChildComponent = () => {\n  _s2();\n\n  const count = useContext(UserContext);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ChildComponent, \"LM0urz63dHRfS0WL4f5FKeK5GNg=\");\n\n_c2 = ChildComponent;\nexport default Hooks;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Hooks\");\n$RefreshReg$(_c2, \"ChildComponent\");","map":{"version":3,"sources":["D:/tp/react-basics/src/routes/HooksOld.jsx"],"names":["React","useState","useEffect","useReducer","createContext","useContext","UserContext","reducer","state","action","type","Hooks","count","setCount","dispatch","console","log","ChildComponent"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,aAAjD,EAAgEC,UAAhE,QAAkF,OAAlF;;;AAEA,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;;AAEA,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzBF,IAAAA,KAAK,GAAGA,KAAK,GAAG,CAAhB;AACD,GAFD,MAEO,IAAIA,KAAK,GAAG,CAAR,IAAaC,MAAM,CAACC,IAAP,KAAgB,KAAjC,EAAwC;AAC7CF,IAAAA,KAAK,GAAGA,KAAK,GAAG,CAAhB;AACD;;AACD,SAAOA,KAAP;AACD,CAPD;;AASA,MAAMG,KAAK,GAAG,MAAM;AAAA;;AAElB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAM,CAACO,KAAD,EAAQM,QAAR,IAAoBX,UAAU,CAACI,OAAD,EAAU,EAAV,CAApC;AAGAL,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAa,eAAcJ,KAAM,QAAjC;AACD,GAFQ,CAAT;AAIA,sBACE;AAAA,4BACE;AAAA,gBAAIJ;AAAJ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,qBAAhC;AAAsD,MAAA,OAAO,EAAE,MAAMM,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,qBAAhC;AAAsD,MAAA,OAAO,EAAE,MAAMI,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEE,KAA7B;AAAA,8BACE;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAkD,QAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAYD,CAvBD;;GAAMD,K;;KAAAA,K;;AAyBN,MAAMM,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAML,KAAK,GAAGP,UAAU,CAACC,WAAD,CAAxB;AACA,sBACE;AAAA,cAAIM;AAAJ;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CALD;;IAAMK,c;;MAAAA,c;AAON,eAAeN,KAAf","sourcesContent":["import React, { useState, useEffect, useReducer, createContext, useContext } from 'react'\r\n\r\nconst UserContext = createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  if (action.type === 'Add') {\r\n    state = state + 1;\r\n  } else if (state > 0 && action.type === 'Sub') {\r\n    state = state - 1;\r\n  }\r\n  return state;\r\n}\r\n\r\nconst Hooks = () => {\r\n\r\n  const [count, setCount] = useState(0);\r\n\r\n  const [state, dispatch] = useReducer(reducer, 10)\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(`you clicked ${count} times`);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <p>{state}</p>\r\n      <button type=\"button\" className=\"btn btn-primary m-1\" onClick={() => dispatch({ type: \"Add\" })}>Reducer Add</button>\r\n      <button type=\"button\" className=\"btn btn-primary m-1\" onClick={() => dispatch({ type: \"Sub\" })}>Reducer Sub</button>\r\n      <UserContext.Provider value={count}>\r\n        <p>{count}</p>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => setCount(count + 1)}>Add</button>\r\n        <ChildComponent count={count} />\r\n      </UserContext.Provider>\r\n    </>\r\n  )\r\n}\r\n\r\nconst ChildComponent = () => {\r\n  const count = useContext(UserContext);\r\n  return (\r\n    <p>{count}</p>\r\n  )\r\n}\r\n\r\nexport default Hooks"]},"metadata":{},"sourceType":"module"}